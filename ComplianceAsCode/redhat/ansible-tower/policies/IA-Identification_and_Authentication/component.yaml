##
## BEGINNING OF:
## IDENTIFICATION AND AUTHENTICATION
##
- control_key: IA-1
  standard_key: NIST-800-53
  covered_by: []
  implementation_status: not applicable
  narrative:
    - text: ''

- control_key: IA-2
  standard_key: NIST-800-53
  covered_by: []
  implementation_status: not applicable
  narrative:
    - text: |
        'Ansible Tower does not have the capability to uniquely identify and
        authenticate organizational users (or processes acting on
        behalf of organizational users).

        To satisfy this control an external authentication service, such
        as Red Hat IdM, must be used. This control is not applicable to
        Ansible Tower when an external authentication service is used.'

- control_key: IA-2 (1)
  standard_key: NIST-800-53
  covered_by: []
  implementation_status: planned
  narrative:
    - text: |
        'The customer will be responsible for implementing multifactor
        authentication for network access to privileged accounts.

        A successful control response will need to address all network-
        accessible privileged account types and the means by which
        multifactor authentication is enforced for each.

        Documentation/guidance is being tracked through GitHub:
        https://github.com/ComplianceAsCode/redhat/issues/305'

- control_key: IA-2 (12)
  standard_key: NIST-800-53
  covered_by: []
  implementation_status: planned
  narrative:
    - text: |
        'Personal Identity Verification (PIV) credentials are those credentials
        issued by federal agencies that conform to FIPS Publication 201 and
        supporting guidance documents. Customers will not be expected to perform
        this credential verification for government agencies. A mechanism for
        allowing government agencies to perform credential verification in a way
        that can be trusted by the customer system is through Active Directory
        Federation Services (ADFS).

        Documentation/guidance for this control is being tracked on GitHub:

        https://github.com/ComplianceAsCode/redhat/issues/306'

- control_key: IA-4
  standard_key: NIST-800-53
  covered_by: []
  implementation_status: not applicable
  narrative:
    - key: a
      text: |
        'This is an organizational control outside the scope of configuring
        Ansible Tower.'
    - key: b
      text: |
        'This is an organizational control outside the scope of configuring
        Ansible Tower.'
    - key: c
      text: |
        'This is an organizational control outside the scope of configuring
        Ansible Tower.'
    - key: d
      text: |
        'Ansible Tower does not have the capability to prevent the
        reuse of identifiers for an organizationally-defined time period.

        To satisfy this control an external authentication service, such
        as Red Hat IdM, must be used. This control is not applicable to
        Ansible Tower when an external authentication service is used.'
    - key: e
      text: |
        'Ansible Tower does not have the capability to disable an identifier
        after an organizationally-defined time period of inactivity.

        To satisfy this control an external authentication service, such
        as Red Hat IdM, must be used. This control is not applicable to
        Ansible Tower when an external authentication service is used.'

- control_key: IA-5
  standard_key: NIST-800-53
  covered_by: []
  # NOTE: Because sub keys cannot have their own implementation_status,
  # using 'complete' to indicate overall satisfaction of requirements,
  # even if certain sub keys are not applicable.
  implementation_status: complete
  narrative:
    - key: a
      text: |
        'This is an organizational control outside the scope of configuring
        Ansible Tower.'
    - key: b
      text: |
        'Ansible Tower does not have the capability to establish initial
        authenticator content for authenticators defined by the organization
        (e.g. complexity requirements in IA-4).

        To satisfy this control an external authentication service, such
        as Red Hat IdM, must be used. This control is not applicable to
        Ansible Tower when an external authentication service is used.'
    - key: c
      text: |
        'Ansible Tower does not have the capability to ensure that
        authenticators have sufficient strength of mechanism for their
        intended use.

        To satisfy this control an external authentication service, such
        as Red Hat IdM, must be used. This control is not applicable to
        Ansible Tower when an external authentication service is used.'
    - key: d
      text: |
        'This is an organizational control outside the scope of configuring
        Ansible Tower.'
    - key: e
      text: |
        'Ansible Tower does not have default account authenticators.
        Authenticators used during the installation of Ansible Tower,
        such as passwords for the embedded database, are created by the
        system administrator during the Ansible Tower installation.
        This is non-configurable behavior.

        This requirement is not applicable to the
        configuration of Ansible Tower.'
    - key: f
      text: |
        'Ansible Tower does not have the capability to establish
        minimum and maximum lifetime restrictions and reuse
        conditions for authenticators.

        To satisfy this control an external authentication service,
        such as Red Hat IdM, must be used. This control is not
        applicable to Ansible Tower when an external authentication
        service is used.'
    - key: g
      text: |
        'Ansible Tower does not have the capability to change/refresh
        authenticators after an organizationally-defined time period
        by authenticator type.

        To satisfy this control an external authentication service,
        such as Red Hat IdM, must be used. This control is not
        applicable to Ansible Tower when an external authentication
        service is used.'
    - key: h
      text: |
        'Ansible Tower uses SSH to connect to remote hosts (or the Windows
        equivalent). In order to pass the key from Tower to SSH, the key must
        be decrypted before it can be written to a named pipe. Tower then uses
        that pipe to send the key to SSH (so that it is never written to disk).

        If passwords are used, Ansible Tower handles those by responding
        directly to the password prompt and decrypting the password before
        writing it to the prompt.

        The encryption/decryption algorithm uses a variation of Fernet: a
        symmetric encryption cipher utilizing AES-256 in CBC mode alongside
        a SHA-256 HMAC. Specific, sensitive, Model fields in Tower are
        encrypted and include:

        CREDENTIAL
          - password
          - ssh_key_data
          - ssh_key_unlock
          - become_password
          - vault_password

        UNIFIED JOB:
          - start_args

        Data is encrypted before it is saved to the database and it is
        decrypted as needed in Tower. The encryption/decryption process
        derives the AES-256 bit encryption key from
        <SECRET_KEY, field_name, primary_key> where field_name is the
        field_name of the Model field and primary_key is the database assigned
        auto-incremented record ID. Thus, if any attribute used in the key
        generation process changes, Tower fails to correctly decrypt the
        secret.'
    - key: i
      text: |
        'This is an organizational control outside the scope of configuring
        Ansible Tower.'
    - key: j
      text: |
        'This is an organizational control outside the scope of configuring
        Ansible Tower.'

- control_key: IA-5 (1)
  standard_key: NIST-800-53
  covered_by: []
  # NOTE: Because sub keys cannot have their own implementation_status,
  # using 'complete' to indicate overall satisfaction of requirements,
  # even if certain sub keys are not applicable.
  implementation_status: complete
  narrative:
    - key: a
      text: |
        'Ansible Tower does not have the capability to enforce minimum
        password complexity requirements.

        To satisfy this control an external authentication service, such
        as Red Hat IdM, must be used. This control is not applicable to
        Ansible Tower when an external authentication service is used.'
    - key: b
      text: |
        'Ansible Tower does not have the capability to enforce at least
        an organizationally-defined number of characters be changed
        when new passwords are created.

        To satisfy this control an external authentication service, such
        as Red Hat IdM, must be used. This control is not applicable to
        Ansible Tower when an external authentication service is used.'
    - key: c
      text: |
        'If passwords are used, Ansible Tower handles those by responding
        directly to the password prompt and decrypting the password before
        writing it to the prompt.

        The encryption/decryption algorithm uses a variation of Fernet: a
        symmetric encryption cipher utilizing AES-256 in CBC mode alongside
        a SHA-256 HMAC. Specific, sensitive, Model fields in Tower are
        encrypted and include:

        CREDENTIAL
          - password
          - ssh_key_data
          - ssh_key_unlock
          - become_password
          - vault_password

        UNIFIED JOB:
          - start_args

        Data is encrypted before it is saved to the database and it is
        decrypted as needed in Tower. The encryption/decryption process
        derives the AES-256 bit encryption key from
        <SECRET_KEY, field_name, primary_key> where field_name is the
        field_name of the Model field and primary_key is the database assigned
        auto-incremented record ID. Thus, if any attribute used in the key
        generation process changes, Tower fails to correctly decrypt the
        secret.'
    - key: d
      text: |
        'Ansible Tower does not have the capability to enforce password
        minimum and maximum lifetime restrictions.

        To satisfy this control an external authentication service, such
        as Red Hat IdM, must be used. This control is not applicable to
        Ansible Tower when an external authentication service is used.'
    - key: e
      text: |
        'Ansible Tower does not have the capability prohibit password
        reuse.

        To satisfy this control an external authentication service, such
        as Red Hat IdM, must be used. This control is not applicable to
        Ansible Tower when an external authentication service is used.'
    - key: f
      text: |
        'Ansible Tower does not have the capability allow the use of a
        temporary password for system logons with an immediate change
        to a permanent password.

        To satisfy this control an external authentication service, such
        as Red Hat IdM, must be used. This control is not applicable to
        Ansible Tower when an external authentication service is used.'

- control_key: IA-5 (11)
  standard_key: NIST-800-53
  covered_by: []
  implementation_status: not applicable
  narrative:
    - text: ''

- control_key: IA-6
  standard_key: NIST-800-53
  covered_by: []
  implementation_status: complete
  narrative:
    - text: |
        'Ansible Tower natively obscures such information.
        Ansible Tower cannot be configured to be out of
        compliance with this requirement.'

- control_key: IA-7
  standard_key: NIST-800-53
  covered_by: []
  implementation_status: none
  narrative:
    - text: |
        'It is currently not possible to configure Ansible Tower to use
        appropriate cryptographic modules. This is a permanent finding.'

- control_key: IA-8
  standard_key: NIST-800-53
  covered_by: []
  implementation_status: not applicable
  narrative:
    - text: |
        'Ansible Tower does not have the capability to uniquely
        identify and authenticate non-organizational users (or
        processes acting on behalf of non-organizational users).

        To satisfy this control an external authentication service, such
        as Red Hat IdM, must be used. This control is not applicable to
        Ansible Tower when an external authentication service is used.'

- control_key: IA-8 (1)
  standard_key: NIST-800-53
  covered_by: []
  implementation_status: planned
  narrative:
    - text: |
        'Personal Identity Verification (PIV) credentials are those
        credentials issued by federal agencies that conform to FIPS Publication
        201 and supporting guidance documents. Customers will not be expected
        to perform this credential verification for government agencies. A
        mechanism for allowing government agencies to perform credential
        verification in a way that can be trusted by the customer system is
        through Active Directory Federation Services (ADFS) or Red Hat IdM.'

- control_key: IA-8 (2)
  standard_key: NIST-800-53
  covered_by: []
  implementation_status: not applicable
  narrative:
    - text: |
        'FICAM approved credentials are those credentials issued by nonfederal
        government entities approved by the Federal Identity, Credential, and
        Access Management (FICAM) Trust Framework Solutions Initiative.
        Customers will not be expected to perform credential verification for
        government agencies. A mechanism for allowing government agencies to
        perform credential verification in a way that can be trusted by the
        customer system is through Active Directory Federation Services
        (ADFS) or Red Hat IdM.'

- control_key: IA-8 (3)
  standard_key: NIST-800-53
  covered_by: []
  implementation_status: not applicable
  narrative:
    - text: |
        'FICAM approved credentials are those credentials issued by nonfederal
        government entities approved by the Federal Identity, Credential, and
        Access Management (FICAM) Trust Framework Solutions Initiative.
        Customers will not be expected to perform credential verification for
        government agencies. A mechanism for allowing government agencies to
        perform credential verification in a way that can be trusted by the
        customer system is through Active Directory Federation Services
        (ADFS) or Red Hat IdM.'

- control_key: IA-8 (4)
  standard_key: NIST-800-53
  covered_by: []
  implementation_status: not applicable
  narrative:
    - text: |
        'FICAM approved credentials are those credentials issued by nonfederal
        government entities approved by the Federal Identity, Credential, and
        Access Management (FICAM) Trust Framework Solutions Initiative.
        Customers will not be expected to perform credential verification for
        government agencies. A mechanism for allowing government agencies to
        perform credential verification in a way that can be trusted by the
        customer system is through Active Directory Federation Services
        (ADFS) or Red Hat IdM.'
